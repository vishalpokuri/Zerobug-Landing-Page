@import "tailwindcss";

/* Global grainy texture */
body {
  background: #141414;
  position: relative;
}

body::before {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: radial-gradient(
      circle at 1px 1px,
      rgba(255, 255, 255, 0.4) 1px,
      transparent 0
    ),
    radial-gradient(
      circle at 50px 50px,
      rgba(255, 204, 0, 0.2) 1px,
      transparent 0
    );
  background-size: 20px 20px, 80px 80px;
  opacity: 0.8;
  pointer-events: none;
  z-index: 1;
}

/* Main content above grain */
.main-content {
  position: relative;
  z-index: 2;
}

/* Enhanced grainy overlay for hero */
.hero-grain {
  position: relative;
}

.hero-grain::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: radial-gradient(
      circle at 2px 2px,
      rgba(255, 255, 255, 0.6) 1px,
      transparent 0
    ),
    radial-gradient(
      circle at 25px 25px,
      rgba(255, 204, 0, 0.3) 1px,
      transparent 0
    );
  background-size: 15px 15px, 40px 40px;
  opacity: 0.9;
  pointer-events: none;
  z-index: -1;
}

/* Card grain effect */
.card-grain {
  position: relative;
  background: rgba(30, 30, 30, 0.8);
  backdrop-filter: blur(10px);
}

.card-grain::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: radial-gradient(
    circle at 1px 1px,
    rgba(255, 255, 255, 0.3) 1px,
    transparent 0
  );
  background-size: 12px 12px;
  opacity: 0.4;
  pointer-events: none;
  border-radius: inherit;
}

/* Modern glow effects */
.glow-yellow {
  box-shadow: 0 0 50px rgba(255, 204, 0, 0.3);
}

.glow-yellow:hover {
  box-shadow: 0 0 80px rgba(255, 204, 0, 0.5);
}

/* Animated gradient text */
.gradient-text {
  background: linear-gradient(45deg, #ffffff, #ffcc00, #ffffff, #ffcc00);
  background-size: 300% 300%;
  animation: gradientShift 3s ease infinite;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Floating animation */
.float {
  animation: float 6s ease-in-out infinite;
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
}

/* Modern border effects */
.border-gradient {
  position: relative;
  background: linear-gradient(
    45deg,
    rgba(255, 204, 0, 0.1),
    rgba(255, 255, 255, 0.1)
  );
  border: 1px solid transparent;
}

.border-gradient::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 1px;
  background: linear-gradient(45deg, #ffcc00, #ffffff, #ffcc00);
  border-radius: inherit;
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: exclude;
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
}

/* Enhanced hover effects */
.hover-lift {
  transition: all 0.3s ease;
}

.hover-lift:hover {
  transform: translateY(-10px);
  box-shadow: 0 20px 40px rgba(255, 204, 0, 0.2);
}

/* Modern button styles */
.btn-modern {
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

.btn-modern::before {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  transition: left 0.5s ease;
}

.btn-modern:hover::before {
  left: 100%;
}

/* Noise texture overlay */
.noise-overlay {
  position: relative;
}

.noise-overlay::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)' opacity='0.1'/%3E%3C/svg%3E");
  pointer-events: none;
  border-radius: inherit;
}

/* Hero image container styles */
.hero-image-container {
  position: relative;
  height: 100vh;
}

.hero-image-container::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    #141414 0%,
    rgba(20, 20, 20, 0.95) 10%,
    rgba(20, 20, 20, 0.8) 25%,
    rgba(20, 20, 20, 0.4) 50%,
    rgba(20, 20, 20, 0.1) 75%,
    transparent 100%
  );
  z-index: 20;
  pointer-events: none;
}

/* Hero image mask styles */
.hero-image-mask {
  background: linear-gradient(
    135deg,
    rgba(255, 204, 0, 0.3) 0%,
    rgba(255, 255, 255, 0.2) 30%,
    rgba(255, 204, 0, 0.4) 60%,
    rgba(255, 204, 0, 0.2) 100%
  );
  position: relative;
}

.hero-image-mask::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: radial-gradient(
      circle at 2px 2px,
      rgba(255, 255, 255, 0.3) 1px,
      transparent 0
    ),
    radial-gradient(
      circle at 15px 15px,
      rgba(255, 204, 0, 0.2) 1px,
      transparent 0
    );
  background-size: 20px 20px, 30px 30px;
  opacity: 0.6;
  pointer-events: none;
}

.hero-image-container {
  position: relative;
  height: 100vh;
}

/* Logo text shadow - Subtle Yellow Glow */
.logo-text-shadow {
  text-shadow: 0 2px 4px rgba(255, 204, 0, 0.25),
    0 1px 2px rgba(255, 204, 0, 0.2), 0 0 8px rgba(255, 204, 0, 0.15);
  transition: text-shadow 0.3s ease;
}

.logo-text-shadow:hover {
  text-shadow: 0 2px 6px rgba(255, 204, 0, 0.25),
    0 1px 3px rgba(255, 204, 0, 0.15), 0 0 12px rgba(255, 204, 0, 0.1);
}

/* What Includes Section - Node Diagram */
.node-container {
  padding: 1.5rem;
  border-radius: 1rem;
  border: 1px solid;
  backdrop-filter: blur(10px);
  transition: all 0.3s ease;
  position: relative;
  max-width: 320px;
}

.node-container:hover {
  transform: translateY(-4px) scale(1.02);
  box-shadow: 0 10px 30px rgba(255, 204, 0, 0.15);
}

.zerobug-node {
  padding: 2rem;
  border-radius: 1.5rem;
  border: 2px solid;
  backdrop-filter: blur(15px);
  transition: all 0.3s ease;
  position: relative;
  max-width: 400px;
  box-shadow: 0 0 40px rgba(255, 204, 0, 0.2);
}

.zerobug-node:hover {
  transform: translateY(-6px) scale(1.03);
  box-shadow: 0 0 60px rgba(255, 204, 0, 0.3);
}

/* Connection Lines */
.connection-line-1,
.connection-line-2,
.connection-line-3 {
  position: absolute;
  right: -2rem;
  width: 8rem;
  height: 2px;
  background: linear-gradient(
    90deg,
    rgba(255, 204, 0, 0.6),
    rgba(255, 204, 0, 0.2)
  );
  top: 50%;
  transform: translateY(-50%);
}

.connection-line-1::after,
.connection-line-2::after,
.connection-line-3::after {
  content: "";
  position: absolute;
  right: -4px;
  top: -4px;
  width: 10px;
  height: 10px;
  background: rgba(255, 204, 0, 0.8);
  border-radius: 50%;
  box-shadow: 0 0 10px rgba(255, 204, 0, 0.6);
}

/* Convergence Point Animation */
.convergence-point {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: radial-gradient(
    circle,
    rgba(255, 204, 0, 0.3),
    rgba(255, 204, 0, 0.1)
  );
  border: 2px solid rgba(255, 204, 0, 0.5);
  animation: pulse 2s ease-in-out infinite;
  position: relative;
}

.convergence-point::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 60%;
  height: 60%;
  background: rgba(255, 204, 0, 0.2);
  border-radius: 50%;
  animation: pulse 2s ease-in-out infinite reverse;
}

@keyframes pulse {
  0%,
  100% {
    transform: scale(1);
    opacity: 0.8;
  }
  50% {
    transform: scale(1.1);
    opacity: 1;
  }
}

/* Responsive adjustments */
/* React Flow Edge Visibility */
.react-flow__edge-path {
  stroke: #ffc107 !important;
  stroke-width: 2px !important;
  opacity: 1 !important;
}

.react-flow__arrowhead {
  fill: #ffc107 !important;
  stroke: #ffc107 !important;
}

.react-flow__edge.animated .react-flow__edge-path {
  stroke-dasharray: 5 5;
  animation: dashdraw 1s linear infinite;
}

@keyframes dashdraw {
  from {
    stroke-dashoffset: 0;
  }
  to {
    stroke-dashoffset: 10;
  }
}

@media (max-width: 768px) {
  .node-container,
  .zerobug-node {
    max-width: 280px;
  }

  .connection-line-1,
  .connection-line-2,
  .connection-line-3 {
    width: 4rem;
    right: -1rem;
  }
}
